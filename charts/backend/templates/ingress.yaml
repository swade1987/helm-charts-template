{{/*Note: This ingress routes to our Istio ingress gateway, which then routes to the backend service via the VirtualService.*/}}
{{- if .Values.application.ingress.enabled -}}
{{- $hostName := include "backend.hostname" . }}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Values.tenant.name }}-{{ .Release.Name}}-alb
  namespace: {{ .Values.istio.ingressGateway.namespace }}
  labels:
    app.kubernetes.io/instance: {{ $.Release.Name }}
    app.kubernetes.io/name: {{ $.Release.Name }}
    app.kubernetes.io/subsystem: {{ $.Values.application.subsystem | quote }}
    app.kubernetes.io/tenant: {{ $.Values.tenant.name | quote }}
    app.kubernetes.io/version: {{ $.Values.application.image.tag | quote }}
    app: {{ $.Release.Name }}
    helm.sh/chart: {{ $.Chart.Name }}-{{ $.Chart.Version }}
  annotations:
    alb.ingress.kubernetes.io/certificate-arn: {{ .Values.application.ingress.certArn }}
    alb.ingress.kubernetes.io/scheme: {{ .Values.application.ingress.scheme }}
    alb.ingress.kubernetes.io/ssl-policy: 'ELBSecurityPolicy-TLS-1-2-Ext-2018-06'
    alb.ingress.kubernetes.io/target-type: {{ .Values.application.ingress.targetType }}
    alb.ingress.kubernetes.io/wafv2-acl-arn: {{ .Values.application.ingress.wafArn }}
    alb.ingress.kubernetes.io/load-balancer-attributes: access_logs.s3.enabled={{ .Values.application.ingress.logging.enabled }},access_logs.s3.bucket={{ .Values.application.ingress.logging.bucket }},access_logs.s3.prefix={{ .Values.environment }}/{{ .Values.tenant.name }}/{{ .Release.Name }}
    alb.ingress.kubernetes.io/healthcheck-path: /healthz/ready
    alb.ingress.kubernetes.io/healthcheck-port: http-16021
    alb.ingress.kubernetes.io/healthcheck-protocol: HTTP
    alb.ingress.kubernetes.io/backend-protocol: HTTPS
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS":443}]'
    {{- if .Values.application.ingress.albGroupName }}
    alb.ingress.kubernetes.io/group.name: {{ .Values.application.ingress.albGroupName }}
    {{- end }}
    alb.ingress.kubernetes.io/actions.ssl-redirect: |
      {
        "Type": "redirect",
        "RedirectConfig": {
          "Protocol": "HTTPS",
          "Port": "443",
          "StatusCode": "HTTP_301"
        }
      }
spec:
  ingressClassName: alb
  rules:
    - host: {{ $hostName }}
      http:
        paths:
          - backend:
              service:
                name: ssl-redirect
                port:
                  name: use-annotation
            path: /
            pathType: Prefix
          - backend:
              service:
                name: {{ $.Values.istio.ingressGateway.name }}
                port:
                  name: https
            path: /
            pathType: Prefix
  {{- if .Values.application.ingress.additionalHostnames }}
  {{- range .Values.application.ingress.additionalHostnames | trim | split "," }}
    - host: {{ . | trim }}
      http:
        paths:
          - backend:
              service:
                name: ssl-redirect
                port:
                  name: use-annotation
            path: /
            pathType: Prefix
          - backend:
              service:
                name: {{ $.Values.istio.ingressGateway.name }}
                port:
                  name: https
            path: /
            pathType: Prefix
  {{- end }}
  {{- end }}
{{- end }}
